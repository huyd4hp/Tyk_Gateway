services:
  tyk-dashboard:
    image: tykio/tyk-dashboard:${DASHBOARD_VERSION:-v5.4.0}
    container_name: tyk-dashboard
    hostname: tyk-dashboard
    restart: always
    environment:
      - TYK_DB_LICENSEKEY=${DASH_LICENSE:?License key missing from Docker environment file "".env" file.  Review The Getting Started steps in README.md.}
      - TYK_DB_STORAGE_MAIN_TYPE=postgres
      - TYK_DB_STORAGE_MAIN_CONNECTIONSTRING=user=tyk-postgres password=tyk-postgres host=tyk-postgres port=5432 database=tyk_analytics
    depends_on:
      tyk-postgres:
        condition: service_healthy
    ports:
      - "3000:3000"
    env_file:
      - ./confs/tyk_analytics.env
    networks:
      - TykNetwork

  tyk-ent-portal:
    image: tykio/portal:${PORTAL_VERSION:-v1.10.0}
    hostname: tyk-ent-portal
    restart: always
    command: --bootstrap
    environment:
      - PORTAL_LICENSEKEY=${DASH_LICENSE:?License key missing from Docker environment file "".env" file.  Review The Getting Started steps in README.md.}
    env_file:
      - ./confs/tyk_portal.env
    networks:
      - TykNetwork

  tyk-gateway:
    image: tykio/tyk-gateway:${GATEWAY_VERSION:-v5.4.0}
    container_name: tyk-gateway
    hostname: tyk-gateway
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./apps:/opt/tyk-gateway/apps
    env_file:
      - ./confs/tyk.env
    networks:
      - TykNetwork
      - ServiceNetwork

  tyk-pump:
    image: tykio/tyk-pump-docker-pub:v1.10.0
    container_name: tyk-pump
    restart: always
    env_file:
      - ./confs/pump.env
      - ./confs/pump.postgres.env
    depends_on:
      tyk-postgres:
        condition: service_healthy
    networks:
      - TykNetwork

  tyk-redis:
    image: redis
    container_name: tyk-redis
    hostname: tyk-redis
    restart: always
    volumes:
      - ./tyk-redis:/data
    networks:
      - TykNetwork

  tyk-postgres:
    image: postgres:latest
    container_name: tyk-postgres
    hostname: tyk-postgres
    restart: always
    environment:
      - POSTGRES_DB=tyk_analytics
      - POSTGRES_USER=tyk-postgres
      - POSTGRES_PASSWORD=tyk-postgres
    volumes:
      - ./tyk-postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - TykNetwork

networks:
  TykNetwork:
    external: true
    driver: bridge
  ServiceNetwork:
    external: true
    driver: bridge
